package PointRollAPI_AS3.components.video {		/** @private **/
	public class BufferProperties {				private var _autoFail:Boolean;		private var _autoFailInit:Boolean;		private var _buffer:Number;			//w		private var _completeAt:Number;		//w		private var _forceBuffer:Number;	//w		private var _minimumBandwidth:Number;		private var _optionalMilestones:Array;		private var _progressFrequency:Number;		private var _timeOutDuration:int;		private var _trackEvents:Boolean;		private var _trackEventsInit:Boolean;		private var _trackProgress:uint;	//w		private var _volume:Number;		public var initialized:Boolean;				function BufferProperties() {			initialized = false;			_autoFailInit = false;			_trackEventsInit = false;		}				public function set autoFail(autoFail:Boolean):void { _autoFail = autoFail; _autoFailInit = true;}		public function get autoFail():Boolean { return _autoFail; }		public function get autoFailInit():Boolean { return _autoFailInit; }		public function set buffer(buffer:Number):void { _buffer = buffer; }		public function get buffer():Number { return _buffer; }				public function set completeAt(completeAt:Number):void { _completeAt = completeAt; }		public function get completeAt():Number { return _completeAt; }		public function set forceBuffer(forceBuffer:Number):void { _forceBuffer = forceBuffer; }		public function get forceBuffer():Number { return _forceBuffer; }		public function set minimumBandwidth(minimumBandwidth:Number):void { _minimumBandwidth = minimumBandwidth; }		public function get minimumBandwidth():Number { return _minimumBandwidth; }				public function set optionalMilestones(optionalMilestones:Array):void { _optionalMilestones = optionalMilestones; }		public function get optionalMilestones():Array { return _optionalMilestones; }				public function set progressFrequency(progressFrequency:Number):void { _progressFrequency = progressFrequency; }		public function get progressFrequency():Number { return _progressFrequency; }				public function set timeOutDuration(timeOutDuration:int):void { _timeOutDuration = timeOutDuration; }		public function get timeOutDuration():int { return _timeOutDuration; }				public function set trackEvents(trackEvents:Boolean):void { _trackEvents = trackEvents; _trackEventsInit = true; }		public function get trackEvents():Boolean { return _trackEvents; }		public function get trackEventsInit():Boolean { return _trackEventsInit; }				public function set trackProgress(trackProgress:uint):void { _trackProgress = trackProgress; }		public function get trackProgress():uint { return _trackProgress; }						public function set volume(volume:Number):void { _volume = volume; }		public function get volume():Number { return _volume; }				///////////////////////////////////////////////////////////////////////////////////////		public function init():void { initialized = true; }			}	}