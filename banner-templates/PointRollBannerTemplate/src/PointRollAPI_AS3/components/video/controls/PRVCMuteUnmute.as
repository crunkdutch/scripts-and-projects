/** * PointRoll Video Control Mute/Unmute Toggle *  * Mutes or Unmutes a video *  * @class 		PRVCMuteUnmute * @package		PointRollAPI.components.video.controls * @author		PointRoll */package PointRollAPI_AS3.components.video.controls  {	import PointRollAPI_AS3.events.media.PrProgressEvent;	import flash.events.MouseEvent;	import flash.events.TimerEvent;	/** @private **/
	public class PRVCMuteUnmute extends PointRollAPI_AS3.components.video.controls.PRVCUIToggle {				//internal use, needed for component structure		public static var symbolName:String = "PRVCMuteUnmute";   		public static var symbolOwner:Object = PointRollAPI_AS3.components.video.controls.PRVCMuteUnmute;			private var rollingOver:Boolean;			function PRVCMuteUnmute() {			super();			linkHitArea = 	"PRHitArea";			statusHandler		 = 	[										 	{	labelNormal: 	"up_mute",												labelOver:		"over_mute",												labelRelease:	"down_mute",												labelDisabled:	"disabled_mute"												},										 	{	labelNormal: 	"up_unmute",												labelOver:		"over_unmute",												labelRelease:	"down_unmute",												labelDisabled:	"disabled_unmute"												}										 ];			rollingOver = false;			init();		}			protected override function initialize(event:TimerEvent):void {			timerNotify.stop();			timerNotify = null;			addListeners();		}			protected override function addListeners():void {			prVideoDisplay = getVideoDisplayInstance();			if(prVideoDisplay) {				prVideoDisplay.addEventListener(PrProgressEvent.PROGRESS, onProgress);			}		}			protected override function rollOver(event:MouseEvent):void {			super.rollOver(event);			rollingOver = true;		}				protected override function rollOut(event:MouseEvent):void {			super.rollOut(event);			rollingOver = false;		}			protected override function release(event:MouseEvent):void {			super.release(event);			if(actualMode == 0) {				prVideoDisplay.mute();			}else if(actualMode == 1){				prVideoDisplay.unmute();				if(prVideoDisplay.getVolume()==0) {					prVideoDisplay.setVolume(.5);				}			}			toggleMode();		}			/**		*	Events fired by VDC		*/		private function onProgress(e:PrProgressEvent):void {			if(!rollingOver) {				if(prVideoDisplay.getVolume()==0) {					toggleMode(1);				}else{					toggleMode(0);				}			}		}		}	}